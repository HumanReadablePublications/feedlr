{"name":"Feedlr","tagline":"A Ruby interface to Feedly's API","body":"# Feedlr - A Ruby interface to Feedly API\r\n\r\n[![Gem Version](https://badge.fury.io/rb/feedlr.svg)](http://badge.fury.io/rb/feedlr) [![Build Status](https://travis-ci.org/khelll/feedlr.svg?branch=master)](https://travis-ci.org/khelll/feedlr) [![Coverage Status](https://coveralls.io/repos/khelll/feedlr/badge.png)](https://coveralls.io/r/khelll/feedlr) [![Dependency Status](https://gemnasium.com/khelll/feedlr.svg)](https://gemnasium.com/khelll/feedlr) [![Code Climate](https://codeclimate.com/github/khelll/feedlr/badges/gpa.svg)](https://codeclimate.com/github/khelll/feedlr)\r\n\r\nA Ruby interface to Feedly [API](http://developer.feedly.com/).\r\n\r\n## API Support\r\n\r\n- [x] Categories API\r\n- [x] Entries API\r\n- [x] Evernote API\r\n- [x] Facebook API\r\n- [x] Feeds API\r\n- [x] Markers API\r\n- [x] Microsoft API\r\n- [x] Mixes API\r\n- [x] OPML API\r\n- [x] Preferences API\r\n- [x] Profile API\r\n- [x] Search API\r\n- [x] Streams API\r\n- [x] Subscriptions API\r\n- [x] Tags API\r\n- [x] Topics API\r\n- [x] Twitter API\r\n- [x] URL Shortener API\r\n\r\n## Supported Ruby Versions\r\n\r\nFeedlr is tested under 1.9.2, 1.9.3, 2.0.0, 2.1, JRuby (1.9 mode) and Rubinius 2.2.7.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'feedlr'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install feedlr\r\n\r\n## Usage\r\n\r\n### Baisc usage\r\n\r\n```ruby\r\nrequire 'feedlr'\r\nclient = Feedlr::Client.new(oauth_access_token: 'oauth access token')\r\n# Fetch user categories\r\np client.user_categories\r\n# Fetch user subscriptions\r\np client.user_subscriptions\r\n```\r\n\r\n### Detailed API\r\n\r\nYou can easily inspect the available client methods:\r\n\r\n```ruby\r\nclient = Feedlr::Client.new\r\np client.api_methods\r\n```\r\n\r\nAlso, the gem is fairly documented. Browse the YARD [documentaion](http://rubydoc.info/gems/feedlr/) for more information.\r\n\r\n### Global configuration\r\n\r\nYou can have a global configuration that instances can use. For example,  you can have the following in some initializer's code:\r\n\r\n```ruby\r\nFeedlr.configure do |config|\r\n  config.oauth_access_token = 'oauth access token'\r\n  config.sandbox = true\r\n  config.logger = SomeCustomLogger.new\r\nend\r\n```\r\nAnd elsewhere you can do:\r\n```ruby\r\nclient = Feedlr::Client.new\r\n```\r\n\r\n### Instance initialization\r\n\r\nYou can set the oauth access token, a custom logger(if needed) and whether or not to use the client on sandbox(develpment) mode:\r\n\r\n```ruby\r\nrequire 'logger'\r\nclient = Feedlr::Client.new(\r\n  oauth_access_token: 'oauth access token',\r\n  sandbox: true,\r\n  logger: Logger.new(STDOUT)\r\n)\r\n```\r\n\r\n### Pagination\r\n\r\nSome requests support pagination(continuation)\r\n  \r\n```ruby\r\ncursor = client.stream_entries_contents(stream_id)\r\ncursor.each { |page| p page.items.map(&:title) }\r\n```\r\n\r\nFor those requests, you will get enumerable paginated results `Feedlr::Cursor`. Calling `each` or `each_page` on a `Feedlr::Cursor` object yields the response and any follow up responses.\r\n\r\nThere are a few other helper methods that make it easy to control response paging:\r\n  \r\n```ruby\r\ncursor.last_page? #=> false\r\ncursor.next_page? #=> true\r\n \r\n# gets the next page, retunrs nil for the last page\r\nresp = cursor.next_page\r\n \r\n# gets each response in a loop\r\nresp = cursor.next_page until cursor.last_page?\r\n```\r\n\r\n### Rate limiting\r\n\r\nThe client deals with a variaty of [errors](http://rubydoc.info/gems/feedlr/Feedlr/Error). The errors have a corresponding [rate_limit](http://rubydoc.info/gems/feedlr/Feedlr/RateLimit) object that maps to the returned rate limiting [headers](http://developer.feedly.com/v3/#rate-limiting) if any.\r\n\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"UA-53469214-1","note":"Don't delete this file! It's used internally to help with page regeneration."}